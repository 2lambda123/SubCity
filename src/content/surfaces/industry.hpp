#ifndef _SURFACES_GROUND_HPP_
#define _SURFACES_GROUND_HPP_

/**
*    This file defines the generic raw and constructible 
*    surface the players get when they start a new game.
*
*------- CHANGELOG --------
*
* 10.02.2017 - v 1.0 (draft)
* First draft (Niels)
*
*------- LICENSE -------
* TODO
*
*/

#include "../inc/defs.hpp"


namespace subcity {

  namespace world {
	class Industry : public Surface {
	public:
		
		Industry(scCoordinates _coordinates);

		~Industry();

		void execute();

		scIndustryStaffSize getFullStaffSize();

		void setFullStaffSize(scIndustryStaffSize _fullStaffSize);

		scIndustryStaffSize getCurrentStaffSize();

		void setCurrentStaffSize(scIndustryStaffSize _currentStaffSize);

		scIndustryIncome getIncome();

		scIndustryStocks getCurrentStocks();

		scIndustryHourlyProductivity getHourlyProductivity();

	private:
		scIndustryStaffSize nbOfEmployee;	/* << Total number of employees */

		scIndustryStaffSize currentStaffSize; /* << current staff available at a given tick */

		scIndustryIncome income; // TODO: income is generated by the number of employees able to reach the industry tile via transportation. It also needs goods transportation as well.

		scIndustryStocks currentStocks;		/* << current stocks available. This variable is incremented in function of the current number of staff and the productivity ratio */

		scIndustryHourlyProductivity hourlyProductivity;	/* << hourly productivity when 100% staff needed for the shift is available.*/
		// TODO: shift lists. Each shift has a required number of employee that may be later decided (GA?). Productivity may also modulates in function of a given shift.
	};
  };
};

#endif
